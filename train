import tensorflow as tf
import tensorflow_datasets as tfds
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D, Dropout

train, _ = tfds.load('cats_vs_dogs', split=['train[:80%]'], with_info=True, as_supervised=True)
test, _ = tfds.load('cats_vs_dogs', split=['train[-20%:]'], with_info=True, as_supervised=True)

SIZE = 224
def resize_image(img, label):
    img = tf.cast(img, tf.float32)
    img = tf.image.resize(img, (SIZE, SIZE))
    img = img / 255.0
    return img, label

train_resized = train[0].map(resize_image)
train_batches = train_resized.shuffle(1000).batch(16)
test_resized = test[0].map(resize_image)
test_batches = test_resized.batch(16)

base_layers = tf.keras.applications.MobileNetV2(input_shape=(SIZE, SIZE, 3), include_top=False)
base_layers.trainable = False

model = tf.keras.Sequential([
                             base_layers,
                             GlobalAveragePooling2D(),
                             Dropout(0.2),
                             Dense(1)
])
model.compile(optimizer='adam', loss=tf.keras.losses.BinaryCrossentropy(from_logits=True), metrics=['accuracy'])

model.fit(train_batches, epochs=3, validation_data=test_batches)

model.save('cat_vs_dog_v5.h5')
